auth:
  app:
    name: auth
    replicaCount: 1
    namespace: test2
  
  image: 
    name: auth
    tag: latest
    pullPolicy: Never
  
  resources:
    cpu:
      requests: 100m
      limits: 100m
    memory:
      requests: 100Mi
      limits: 100Mi
  
  env:
    - name: DB_HOST
      value: "mysql.default.svc.cluster.local"
    - name: DB_USER
      value: "budgetbook"
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysql
          key: mysql-password
    - name: DB_NAME
      value: "budgetbook"
    - name: DB_PORT
      value: "3306"
    - name: GOOGLE_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: budgetbook
          key: GOOGLE_CLIENT_ID
    - name: GOOGLE_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: budgetbook
          key: GOOGLE_CLIENT_SECRET
    - name: GOOGLE_CALLBACK_URL
      value: "https://budgetbook.me/api/auth/google/redirect"
    - name: REDIRECT_HOST
      value: "https://budgetbook.me"
    - name: JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: budgetbook
          key: JWT_SECRET
  
  ports:
    containerPort: 3000
    protocol: TCP
  restartPolicy: Always
  
  service:
    ports:
        name: http
        port: 3000
        targetPort: 3000
expense:
  deployment:
    metadata:
      name: expense
      namespace: test2
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: expense
      template:
        metadata:
          labels:
            app: expense
        spec:
          containers:
            - image:
                name: expense
                tag: latest
                PullPolicy: Never
              resources:
                cpu:
                  requests: 100m
                  limits: 100m
                memory:
                  requests: 100Mi
                  limits: 100Mi
              env:
                - name: DB_HOST
                  value: "mysql.default.svc.cluster.local"
                - name: DB_USER
                  value: "budgetbook"
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mysql
                      key: mysql-password
                - name: DB_NAME
                  value: "budgetbook"
                - name: DB_PORT
                  value: "3306"
                - name: JWT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: budgetbook
                      key: JWT_SECRET
              name: expense
              ports:
                - containerPort: 3000
                  protocol: TCP
service:
    metadata:
      name: expense
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/api/metrics"
        prometheus.io/port: "3000"
    spec:
      selector:
        app: expense
      ports:
        - name: "http"
          port: 3000
          targetPort: 3000    

ingress:
  metadata:
    name: ingress
  spec:
    tls:
      - hosts:
          - budgetbook.me
        secretName: budgetbook.me
    ingressClassName: nginx
    rules:
      - host: budgetbook.me
        http:
          paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: frontend
                  port:
                    number: 80
            - path: /api/auth
              pathType: Prefix
              backend:
                service:
                  name: auth
                  port:
                    number: 3000
            - path: /api/expense
              pathType: Prefix
              backend:
                service:
                  name: expense
                  port:
                    number: 3000
            - path: /api/statistics
              pathType: Prefix
              backend:
                service:
                  name: statistics
                  port:
                    number: 3000

